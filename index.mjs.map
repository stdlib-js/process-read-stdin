{"version":3,"file":"index.mjs","sources":["../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFunction = require( '@stdlib/assert-is-function' );\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar Buffer = require( '@stdlib/buffer-ctor' );\nvar string2buffer = require( '@stdlib/buffer-from-string' );\nvar stream = require( '@stdlib/streams-node-stdin' );\nvar nextTick = require( '@stdlib/utils-next-tick' );\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Reads data from `stdin`.\n*\n* @param {(string|null)} [encoding] - string encoding. If set, data will be returned as an encoded `string`.\n* @param {Function} clbk - callback to be invoked upon reading all data from `stdin`\n* @throws {TypeError} `encoding` argument must be a string\n* @throws {TypeError} callback argument must be a function\n* @returns {void}\n*\n* @example\n* function onRead( error, data ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( data.toString() );\n*     // => '...'\n* }\n*\n* stdin( onRead );\n*\n* @example\n* function onRead( error, data ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( data );\n*     // => '...'\n* }\n*\n* stdin( 'utf8', onRead );\n*/\nfunction stdin() {\n\tvar clbk;\n\tvar data;\n\tvar enc;\n\tvar len;\n\n\tif ( arguments.length === 1 ) {\n\t\tclbk = arguments[ 0 ];\n\t} else {\n\t\tenc = arguments[ 0 ];\n\t\tif ( !isString( enc ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Encoding argument must be a string. Value: `%s`.', enc ) );\n\t\t}\n\t\tclbk = arguments[ 1 ];\n\t}\n\tif ( !isFunction( clbk ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Callback argument must be a function. Value: `%s`.', clbk ) );\n\t}\n\tif ( enc ) {\n\t\tstream.setEncoding( enc );\n\t}\n\t// If the calling file is being run as a script and not as part of a pipeline, we should not expect to receive anything on `stdin`.\n\tif ( stream.isTTY ) {\n\t\treturn nextTick( onTick );\n\t}\n\tdata = [];\n\tlen = 0;\n\n\tstream.on( 'readable', onReadable );\n\tstream.on( 'error', onError );\n\tstream.on( 'end', onEnd );\n\n\t/**\n\t* Callback invoked after the next tick.\n\t*\n\t* @private\n\t* @returns {void}\n\t*/\n\tfunction onTick() {\n\t\tif ( enc ) {\n\t\t\treturn clbk( null, '' );\n\t\t}\n\t\tclbk( null, string2buffer( '' ) );\n\t}\n\n\t/**\n\t* Callback invoked once the stream has data to consume.\n\t*\n\t* @private\n\t*/\n\tfunction onReadable() {\n\t\tvar chunk;\n\t\twhile ( true ) {\n\t\t\tchunk = stream.read();\n\t\t\tif ( chunk === null ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( typeof chunk === 'string' ) {\n\t\t\t\tchunk = string2buffer( chunk );\n\t\t\t}\n\t\t\tdata.push( chunk );\n\t\t\tlen += chunk.length;\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked upon encountering a stream error.\n\t*\n\t* @private\n\t* @param {Error} error - error object\n\t*/\n\tfunction onError( error ) {\n\t\tclbk( error );\n\t}\n\n\t/**\n\t* Callback invoked after all data has been consumed.\n\t*\n\t* @private\n\t* @returns {void}\n\t*/\n\tfunction onEnd() {\n\t\tif ( enc ) {\n\t\t\t// Return a string...\n\t\t\treturn clbk( null, data.join( '' ) );\n\t\t}\n\t\t// Return a buffer...\n\t\tclbk( null, Buffer.concat( data, len ) );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = stdin;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Read data from `stdin`.\n*\n* @module @stdlib/process-read-stdin\n*\n* @example\n* var stdin = require( '@stdlib/process-read-stdin' );\n*\n* function onRead( error, data ) {\n*     if ( error ) {\n*         throw error;\n*     }\n*     console.log( data.toString() );\n*     // returns '...'\n* }\n*\n* stdin( onRead );\n*/\n\n// MODULES //\n\nvar stdin = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = stdin;\n"],"names":["isFunction","require$$0","isString","require$$1","isPrimitive","Buffer","require$$2","string2buffer","require$$3","stream","require$$4","nextTick","require$$5","format","require$$6","lib","clbk","data","enc","len","arguments","length","TypeError","setEncoding","isTTY","onTick","onReadable","chunk","read","push","onError","error","onEnd","join","concat","on"],"mappings":";;ykBAsBA,IAAIA,EAAaC,EACbC,EAAWC,EAAsCC,YACjDC,EAASC,EACTC,EAAgBC,EAChBC,EAASC,EACTC,EAAWC,EACXC,EAASC,EAkIb,IChHAC,EDkBA,WACC,IAAIC,EACAC,EACAC,EACAC,EAEJ,GAA0B,IAArBC,UAAUC,OACdL,EAAOI,UAAW,OACZ,CAEN,IAAMlB,EADNgB,EAAME,UAAW,IAEhB,MAAM,IAAIE,UAAWT,EAAQ,qEAAsEK,IAEpGF,EAAOI,UAAW,GAEnB,IAAMpB,EAAYgB,GACjB,MAAM,IAAIM,UAAWT,EAAQ,uEAAwEG,IAMtG,GAJKE,GACJT,EAAOc,YAAaL,GAGhBT,EAAOe,MACX,OAAOb,EAAUc,GAelB,SAASA,IACR,GAAKP,EACJ,OAAOF,EAAM,KAAM,IAEpBA,EAAM,KAAMT,EAAe,KAQ5B,SAASmB,IAER,IADA,IAAIC,EAGY,QADfA,EAAQlB,EAAOmB,SAIO,iBAAVD,IACXA,EAAQpB,EAAeoB,IAExBV,EAAKY,KAAMF,GACXR,GAAOQ,EAAMN,OAUf,SAASS,EAASC,GACjBf,EAAMe,GASP,SAASC,IACR,GAAKd,EAEJ,OAAOF,EAAM,KAAMC,EAAKgB,KAAM,KAG/BjB,EAAM,KAAMX,EAAO6B,OAAQjB,EAAME,IA9DlCF,EAAO,GACPE,EAAM,EAENV,EAAO0B,GAAI,WAAYT,GACvBjB,EAAO0B,GAAI,QAASL,GACpBrB,EAAO0B,GAAI,MAAOH"}